family_relation.father_is_parent_of_child = {
	name = "father is_parent_of character, that character is_child_of father"
	character_target = 1316 # Heinrich IV

	assert = {
		exists = father
	}
	expect = {
		father = {
			is_parent_of = root
		}
	}
	expect = {
		is_child_of = father
	}
}
family_relation.mother_is_parent_of_child = {
	name = "mother is_parent_of character, that character is_child_of mother"
	character_target = 1316 # Heinrich IV

	assert = {
		exists = mother
	}
	expect = {
		mother = {
			is_parent_of = root
		}
	}
	expect = {
		is_child_of = mother
	}
}

family_relation.mother_father_is_grandparent_of_is_grandchild_of = {
	name = "mother's father is_grandparent_of character, that character is_grandchild_of mother's father"
	character_target = 1316 # Heinrich IV

	assert = {
		exists = mother.father
	}
	expect = {
		mother.father = {
			is_grandparent_of = root
		}
	}
	expect = {
		is_grandchild_of = mother.father
	}
}
family_relation.mother_mother_is_grandparent_of = {
	name = "mother's mother is_grandparent_of character, that character is_grandchild_of mother's mother"
	character_target = 1316 # Heinrich IV

	assert = {
		exists = mother.mother
	}
	expect = {
		mother.mother = {
			is_grandparent_of = root
		}
	}
	expect = {
		is_grandchild_of = mother.mother
	}
}
family_relation.father_mother_is_grandparent_of = {
	name = "father's mother is_grandparent_of character, that character is_grandchild_of father's mother"
	character_target = 1316 # Heinrich IV

	assert = {
		exists = father.mother
	}
	expect = {
		father.mother = {
			is_grandparent_of = root
		}
	}
	expect = {
		is_grandchild_of = father.mother
	}
}
family_relation.father_father_is_grandparent_of = {
	name = "father's father is_grandparent_of character, that character is_grandchild_of father's father"
	character_target = 1316 # Heinrich IV

	assert = {
		exists = father.father
	}
	expect = {
		father.father = {
			is_grandparent_of = root
		}
	}
	expect = {
		is_grandchild_of = father.father
	}
}

# testing only one case here, hoping all cases would break at the same time anyway
family_relation.mother_father_father_is_great_grandparent_of_is_great_grandchild_of = {
	name = "mother's father's father is_great_grandparent_of character, that character is_great_grandchild_of mother's father's father"
	character_target = 1316 # Heinrich IV

	assert = {
		exists = mother.father.father
	}
	expect = {
		mother.father.father = {
			is_great_grandparent_of = root
		}
	}
	expect = {
		is_great_grandchild_of = mother.father.father
	}
}

family_relation.uncle_is_uncle_or_aunt_of_is_nibling_of = {
	name = "uncle is_uncle_or_aunt_of character, that character is_nibling_of uncle"
	character_target = 1316 # Heinrich IV
	target = {
		flag = uncle
		character_target = 106512 # Ludolf
	}

	assert = {
		exists = scope:uncle
		father = {
			is_sibling_of = scope:uncle
		}
	}
	expect = {
		scope:uncle = {
			is_uncle_or_aunt_of = root
		}
	}
	expect = {
		is_nibling_of = scope:uncle
	}
}
family_relation.aunt_is_uncle_or_aunt_of_is_nibling_of = {
	name = "aunt is_uncle_or_aunt_of character, that character is_nibling_of aunt"
	character_target = 1316 # Heinrich IV
	target = {
		flag = aunt
		character_target = 106519 # Gisela
	}

	assert = {
		exists = scope:aunt
		father = {
			is_sibling_of = scope:aunt
		}
	}
	expect = {
		scope:aunt = {
			is_uncle_or_aunt_of = root
		}
	}
	expect = {
		is_nibling_of = scope:aunt
	}
}
