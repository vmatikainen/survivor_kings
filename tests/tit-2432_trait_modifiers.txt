TIT_2432_monthly_income_mult = {
	name = "Harold gains trait that increases monthly gold income"
	character_target = 122 #Harold

	effect = {
		remove_trait = generous
		remove_trait = greedy
		scriptedtests_recalculate_character_modifier = yes
		set_local_variable = { name = old_income value = this.scriptedtests_gold_income_no_theocracy }
	}
	assert = {
		NOT = { has_trait = greedy }
		NOT = { local_var:old_income = 0 }
	}
	effect = {
		add_trait = greedy
	}
	assert = {
		has_trait = greedy
	}
	effect = {
		scriptedtests_recalculate_character_modifier = yes
		set_local_variable = { name = new_income value = this.scriptedtests_gold_income_no_theocracy }
		# XXX: would like to do local_var:new_income > local_var:old_income in post, but can't use comparison operators with variables :/
		set_local_variable = { name = income_diff value = local_var:new_income }
		change_local_variable = { name = income_diff subtract = local_var:old_income }
	}
	expect = {
		local_var:income_diff > 0
	}
}

TIT_2432_monthly_piety_gain_mult = {
	name = "Harold gains trait that decreases monthly piety income"
	character_target = 122 #Harold

	effect = {
		add_trait = pilgrim # make sure that we have some monthly piety
		scriptedtests_recalculate_character_modifier = yes
		set_local_variable = { name = old_income value = this.scriptedtests_piety_income }
	}
	assert = {
		NOT = { has_trait = excommunicated }
		local_var:old_income > 0
	}
	effect = {
		add_trait = excommunicated
	}
	assert = {
		has_trait = excommunicated
	}
	effect = {
		scriptedtests_recalculate_character_modifier = yes
		set_local_variable = { name = new_income value = this.scriptedtests_piety_income }
		# XXX: would like to do local_var:new_income < local_var:old_income in post, but can't use comparison operators with variables :/
		set_local_variable = { name = income_diff value = local_var:new_income }
		change_local_variable = { name = income_diff subtract = local_var:old_income }
	}
	expect = {
		local_var:income_diff < 0
	}
}


TIT_2432_dread_baseline_add = {
	name = "Harold gains trait that increases dread baseline"
	character_target = 122 #Harold

	effect = {
		remove_trait = wrathful
		remove_trait = calm # Would prevent us getting wrathful
		scriptedtests_recalculate_character_modifier = yes
		set_local_variable = { name = old_value value = this.scriptedtests_dread_base }
	}
	assert = {
		NOT = { has_trait = wrathful }
	}
	effect = {
		add_trait = wrathful
	}
	assert = {
		has_trait = wrathful
	}
	effect = {
		scriptedtests_recalculate_character_modifier = yes
		set_local_variable = { name = new_value value = this.scriptedtests_dread_base }
		# XXX: would like to do local_var:new_value > local_var:old_value in post, but can't use comparison operators with variables :/
		set_local_variable = { name = value_diff value = local_var:new_value }
		change_local_variable = { name = value_diff subtract = local_var:old_value }
	}
	expect = {
		local_var:value_diff > 0
	}
}
